<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AIMathProject.API</name>
    </assembly>
    <members>
        <member name="M:AIMathProject.API.Controllers.ChapterController.GetAllChapter">
            <summary>
             Return all chapters of all class
            </summary>
            /// <remarks>
            *Only logged in users can use this api (including user and admin)*
            - **grade**: The grade level
            - **chapterOrder**: The order of the chapter in the curriculum.
            - **chapterName**: The name of the chapter.
            - **lessons**: Null, because this api just return information about grade and chapters, not include lessions in chapter
            </remarks>
            <returns>return list of chapters of classes </returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.ChapterController.GetDetailChapters">
            <summary>
             Returns detailed information of each lesson in the chapters
            </summary>
            <remarks>
            *Only logged in users can use this api (including user and admin)*
            - **grade**: The grade level
            - **chapterOrder**: The order of the chapter in the curriculum.
            - **semester**: semester
            - **chapterName**: The name of the chapter.
            - **lessons**: A list of lessons within the chapter. Each lesson includes:
              - **lessonOrder**: The order of the lesson within the chapter.
              - **lessonName**: The name of the lesson.
            </remarks>
            <returns>return detail list of chapters of classes </returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.ChapterController.GetDetailChaptersClassifed(System.Int32)">
            <summary>
             Returns detailed information of each lesson in the chapters classified by class
            </summary>
            <remarks>
            *Only logged in users can use this api (including user and admin)*
            - **grade**: The grade level
            - **chapterOrder**: The order of the chapter in the curriculum.
            - **chapterName**: The name of the chapter.
            - **semester**: semester 
            - **lessons**: A list of lessons within the chapter. Each lesson includes:
              - **lessonOrder**: The order of the lesson within the chapter.
              - **lessonName**: The name of the lesson.
            </remarks>
            <returns>return detail list of chapters of classes classified by class</returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.EnrollmentController.GetInfoEnrollmentById(System.Int32)">
             <summary>
             Retrieves all enrollment information for a specific user.
             </summary>
             <remarks>
             *Only logged in users can use this api (including user and admin)*
             This API retrieves enrollment records for a given user, including details such as grade, semester, and academic year.
            
             **Request:**
             The request should include:
             - **id** (int): The unique identifier of the user.
            
             **Response:**
             The response will return a list of enrollment records, each containing:
             - **enrollmentId**: The unique identifier of the enrollment.
             - **userId**: The unique identifier of the user.
             - **grade**: The grade level associated with the enrollment.
             - **enrollmentDate**: The date when the user enrolled.
             - **avgScore**: The average score of the user in this enrollment (nullable).
             - **semester**: The semester in which the user is enrolled.
             - **startYear**: The academic start year.
             - **endYear**: The academic end year.
            
             **Example Request:**
             ```http
             GET /getinfo/id/10
             </remarks>
             <returns>Returns all enrollment records for the specified user.</returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LessonController.GetLessonByID(System.Int32,System.Int32)">
            <summary>
            Retrieves the details of a lesson associated with a specific grade, chapter, and lesson order.
            </summary>
            <remarks>
            *Only logged in users can use this api (including user and admin)*
            This API returns the details of a lesson, filtered by grade level, chapter order, and lesson order.
            
            **Request Parameters:**
            - **grade** (int): The grade level of the study program.
            - **chapterorder** (int): The sequential order of the chapter.
            - **lessonorder** (int): The sequential order of the lesson within the chapter.
            
            **Response Format:**
            The response will return the details of the lesson, including:
            - **lessonOrder** (short?): The order of the lesson within the chapter. Nullable to allow for optional lesson orders.
            - **lessonName** (string): The name of the lesson.
            - **lessonContent** (string, nullable): The content of the lesson, if available. This can be null if no content is provided.
            
            **Example Request:**
            ```http
            GET /api/lesson/grade/1/chapterorder/1/lessonorder/1
            ```
            </remarks>
            <returns>Returns the lesson details matching the specified grade, chapter order, and lesson order.</returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LessonController.CreateLesson(System.Int32,System.Int32,AIMathProject.Application.Dto.LessonDto)">
            <summary>
            Creates a new lesson associated with a specific grade and chapter order.
            </summary>
            <remarks>
            *Only logged in users can use this api (including user and admin)*
            This API creates a new lesson and saves it in the system. The lesson is created with the provided grade level, chapter order, and lesson data.
            
            **Request Parameters:**
            - **grade** (int): The grade level of the study program.
            - **chapterorder** (int): The sequential order of the chapter in the study program.
            - **lessonDto** (LessonDto): The details of the lesson to be created. This should include:
              - **lessonOrder** (short?): The order of the lesson within the chapter.
              - **lessonName** (string): The name of the lesson.
              - **lessonContent** (string, nullable): The content of the lesson (optional).
            
            **Response Format:**
            - **201 Created**: If the lesson is successfully created, the response will include the created `LessonDto` and the URL of the new lesson.
            - **400 Bad Request**: If the lesson could not be created, the response will contain an error message with details on the failure.
            
            **Example Request:**
            ```http
            POST /api/lesson/grade/1/chapter/1
            Content-Type: application/json
            {
              "lessonOrder": 2,
              "lessonName": "Vị trí tiết 2",
              "lessonContent": "linkyoutube"
            }
            **Example Response (Success):**
            ```json
            HTTP/1.1 201 Created
            Location: /api/lesson/grade/1/chapter/1/lessonorder/2
            {
              "lessonOrder": 2,
              "lessonName": "Vị trí tiết 2",
              "lessonContent": "linkyoutube"
            }
            </remarks>
            <returns>Returns a `LessonDto` object representing the created lesson, or a `BadRequest` with an error message if creation fails.</returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LessonController.GetLessonByName(System.Int32,System.String)">
            <summary>
            Retrieves the list of lessons for a specific grade and lesson name.
            </summary>
            <remarks>
            *Only logged in users can use this api (including user and admin)*
            This API retrieves all lessons that match a specific grade level and lesson name.
            The search is case-insensitive and ignores accents in the lesson name.
            
            **Request Parameters:**
            - **grade** (int): The grade level of the study program.
            - **lessonname** (string): The name of the lesson to search for. The search will return lessons whose name contains the provided `lessonname`, regardless of case and accents.
            
            **Response Format:**
            The response will return a list of lessons that match the specified criteria, including:
            - **lessonOrder** (short?): The order of the lesson within the chapter.
            - **lessonName** (string): The name of the lesson.
            - **lessonContent** (string, nullable): The content of the lesson, if available. This can be null if no content is provided.
            
            **Example Request:**
            ```http
            GET /api/lesson/grade/1/lessonname/vi tri
            ```
            </remarks>
            <returns>Returns a list of `LessonDto` objects representing the found lessons, or an empty list if no lessons are found.</returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LessonProgressController.GetLessonProgressById(System.Int32)">
            <summary>
            Returns all information of the study program the user has registered for.
            </summary>
            <remarks>
            *Only logged in users can use this api (including user and admin)*
            This API retrieves the user's study program information, including lesson details and learning progress.
            
            **Request:**
            The request should include userID.
            
            **Response:**
            The response will return a list of lessons, each containing:
            - **lessonId**: The unique identifier of the lesson.
            - **learningProgress**: The progress of the user in the lesson (e.g., percentage completed).
            - **isCompleted**: A boolean indicating whether the lesson is completed.
            - **lesson**: An object containing lesson details:
              - **lessonOrder**: The order of the lesson in the study plan.
              - **lessonName**: The name of the lesson.
              - **lessonContent**: The content of the lesson.
             **Example Request:**
            ```http
            GET /api/lessionprogress/id/6
            </remarks>
            ```
            <returns>Returns all information of the study program the user has registered for.</returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LessonProgressController.GetLessionProgressById(System.Int32,System.Int32)">
            <summary>
            Returns all information of the study program classified by the semester the user has registered for.
            </summary>
            <remarks>
            *Only logged in users can use this api (including user and admin)*
            This API retrieves the user's study program information, including lesson details and learning progress.
            
            **Request:**
            The request should include **userID** and **Semester**.
            
            **Response:**
            The response will return a list of lessons, each containing:
            - **lessonId**: The unique identifier of the lesson.
            - **learningProgress**: The progress of the user in the lesson (e.g., percentage completed).
            - **isCompleted**: A boolean indicating whether the lesson is completed.
            - **lesson**: An object containing lesson details:
              - **lessonOrder**: The order of the lesson in the study plan.
              - **lessonName**: The name of the lesson.
              - **lessonContent**: The content of the lesson.
              **Example Request:**
            ```http
            GET /api/lessionprogress/id/6/semester/1
            </remarks>
            <returns>Returns all information of the study program classified by the semester the user has registered for.</returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LessonProgressController.UpdateLearningProgress(System.Int32,System.Int16)">
             <summary>
             Updates the learning progress of a specific lesson progress record.
             </summary>
             <remarks>
             *Only logged in admin can use this api*
             This API updates the user's learning progress for a specific lesson.
             
             **Request:**
             The request should include:
             - **idProgress** (int): The unique identifier of the lesson progress.
             - **learningProgress** (short): The updated progress percentage of the lesson.
            
             **Response:**
             If successful, the response will return the updated lesson progress information:
             - **learningProgressId**: The unique identifier of the lesson progress.
             - **lessonId**: The unique identifier of the lesson.
             - **learningProgress**: The updated progress of the user in the lesson (e.g., percentage completed).
             - **isCompleted**: A boolean indicating whether the lesson is completed.
             - **lesson**: An object containing lesson details:
               - **lessonOrder**: The order of the lesson in the study plan.
               - **lessonName**: The name of the lesson.
               - **lessonContent**: A link to the lesson content.
            
             **Example Request:**
             ```http
             PATCH /update/lessonprogressID/13/learningprogress/23
             </remarks>
             <returns>Returns the updated learning progress information.</returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LoginWithGoogleController.LoginWithGoogle(System.String)">
             <summary>
             Initiates the login process via Google.
             </summary>
             <remarks>
             This endpoint starts the Google authentication process. It redirects to the Google login page.
             The request should include the `returnUrl` query parameter that will be used after successful authentication.
            
             **Example Request:**
             ```http
             GET /account/login/google?returnUrl=https://example.com/dashboard
             ```
             </remarks>
             <param name="returnUrl">The URL to redirect to after successful login.</param>
             <returns>Returns a challenge to Google authentication.</returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LoginWithGoogleController.GoogleLoginCallback(System.String)">
             <summary>
             Handles the callback from Google after authentication, do not used by front-end
             </summary>
             <remarks>
             This endpoint is triggered after the user has authenticated with Google.
             If authentication is successful, the user's principal is passed to a command for login processing.
             If authentication fails, the request is rejected.
            
             **Example Request:**
             ```http
             GET /account/login/google/callback?returnUrl=https://example.com/dashboard
             ```
             </remarks>
             <param name="returnUrl">The URL to redirect to after successful login.</param>
             <returns>Redirects the user to the return URL if login is successful, or unauthorized if failed.</returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LoginWithUSPW.RegisterUser(AIMathProject.Domain.Requests.RegisterRequest)">
             <summary>
             Registers a new user account.
             </summary>
             <remarks>
             This API allows the creation of a new user account with the provided registration details.
            
             **Request:**
             The request body must contain the user information:
             - **UserName**: The username for the account.
             - **Email**: The email address associated with the account.
             - **Dob**: The date of birth of the user.
             - **PhoneNumber**: The phone number of the user.
             - **Password**: The password for the account(Consists of at least 8 characters, with uppercase and lowercase letters).
            
             **Example Request:**
             ```http
             POST /account/register/user
             Content-Type: application/json
             {
                 "UserName": "john_doe",
                 "Email": "john.doe@example.com",
                 "Dob": "1990-01-01T00:00:00",
                 "PhoneNumber": "0909909090",
                 "Password": "securepasswordAa"
             }
             ```
             </remarks>
             <param name="registerRequest">The registration details for the user.</param>
             <returns>Returns a success response if the registration was successful.</returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LoginWithUSPW.RegisterAdmin(AIMathProject.Domain.Requests.RegisterRequest)">
             <summary>
             Registers a new admin account.
             </summary>
             <remarks>
             This API allows the creation of a new admin account with the provided registration details.
            
             **Request:**
             The request body must contain the admin information:
             - **UserName**: The username for the account.
             - **Email**: The email address associated with the account.
             - **Gender**: The gender of the admin.
             - **Dob**: The date of birth of the admin.
             - **Avatar**: The avatar image URL for the admin.
             - **Password**: The password for the account(Consists of at least 8 characters, with uppercase and lowercase letters).
             - **Status**: The status of the account (active/inactive).
            
             **Example Request:**
             ```http
             POST /account/register/admin
             Content-Type: application/json
             {
                 "UserName": "admin_john",
                 "Email": "admin.john@example.com",
                 "Dob": "1985-01-01T00:00:00",
                 "PhoneNumber": "0909909090",
                 "Password": "adminpassword"
             }
             ```
             </remarks>
             <param name="registerRequest">The registration details for the admin.</param>
             <returns>Returns a success response if the registration was successful.</returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LoginWithUSPW.Login(AIMathProject.Domain.Requests.LoginRequest)">
             <summary>
             Logs in a user and returns JWT and refresh tokens.
             </summary>
             <remarks>
             This API handles user login by verifying credentials and issuing tokens.
            
             **Request:**
             The request body must contain the login information:
             - **Email**: The user's email address.
             - **Password**: The user's password.
            
             **Example Request:**
             ```http
             POST /account/login
             Content-Type: application/json
             {
                 "Email": "michael.brown@example.com",
                 "Password": "Michael@101"
             }
             ```
             </remarks>
             <param name="loginRequest">The login details for the user.</param>
             <returns>Returns JWT and refresh tokens if the login is successful and it saved in cookies</returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LoginWithUSPW.RefreshToken(System.String)">
             <summary>
             Refreshes a JWT token using a refresh token and returns a new JWT token and refresh token.
             </summary>
             <remarks>
             This API allows a client to refresh an expired JWT token by providing a valid refresh token.
             A new JWT token and a new refresh token will be issued if the provided refresh token is valid.
            
             **Request:**
             The request body must contain the refresh token:
             - **refreshTokenRequest**: The refresh token previously issued to the client.
            
             **Example Request:**
             ```http
             POST /api/account/refresh-token
             Content-Type: application/json
             {
                 "refreshTokenRequest": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
             }
             </remarks>
             <param name="refreshTokenRequest">The refresh token provided by the client to obtain a new JWT token.</param>
             <returns>
             Returns a new JWT token and a new refresh token if the refresh token is valid.
             Returns a 400 Bad Request if the refresh token is null or empty.
             </returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LoginWithUSPW.ForgotPassword(System.String,System.String)">
            <summary>
            Initiates the forgot password process by sending a reset password link to the user's email.
            </summary>
            <param name="email">The email address of the user requesting a password reset.</param>
            <param name="host">The host URL used to construct the password reset link (e.g., "http://localhost:5173/forgot-password").</param>
            <returns>
            Returns an <see cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> if the reset password request is successfully initiated,
            or a <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> if an error occurs during the process.
            </returns>
            <remarks>
            - This endpoint does not require authentication.
            - The <paramref name="host"/> parameter should be the base URL of the frontend application
              where the user will be redirected to reset their password.
            - If the email is not found or an error occurs, a bad request response is returned with an error message.
            </remarks>
        </member>
        <member name="M:AIMathProject.API.Controllers.LoginWithUSPW.ResetPassword(AIMathProject.Application.Dto.ResetPasswordModel)">
            <summary>
            Initiates the forgot password process by sending a reset password link to the user's email.
            </summary>
            <param name="email">The email address of the user requesting a password reset.</param>
            <param name="host">The host URL used to construct the password reset link (e.g., "http://localhost:5173/forgot-password").</param>
            <returns>
            Returns an <see cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> if the reset password request is successfully initiated,
            or a <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> if an error occurs during the process.
            </returns>
            <remarks>
            - This endpoint does not require authentication.
            - The <paramref name="host"/> parameter should be the base URL of the frontend application
              where the user will be redirected to reset their password.
            - If the email is not found or an error occurs, a bad request response is returned with an error message.
            - Frontend code reference: https://drive.google.com/drive/folders/18M__nFfmDoVOyqHElTmNdyTL7PiEfbXX?usp=sharing
            </remarks>
        </member>
        <member name="M:AIMathProject.API.Controllers.LoginWithUSPW.TestAuthentication">
            <summary>
            Api test if user logged(Both admin and user)
            </summary>
            <returns></returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LoginWithUSPW.TestAdminOnly">
            <summary>
            This API is used to test users who have logged in and have the Role of Admin.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.LoginWithUSPW.TestUserRole">
            <summary>
            This API is used to test users who have logged in and have the Role of user.
            </summary>
            <returns></returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.QuestionController.GetQuestionByGrade(System.Int32,System.Int32)">
             <summary>
             Retrieves all questions associated with a specific grade and lesson order.
             </summary>
             <remarks>
             *Only logged in users can use this api (including user and admin)*
             This API returns a list of questions for a given study program, filtered by grade level and lesson order.
            
             **Request Parameters:**
             - **grade** (int): The grade level of the study program.
             - **lessonOrder** (int): The sequential order of the lesson.
            
             **Response Format:**
             The response will return a list of questions, each containing:
             - **questionId** (int): The unique identifier of the question.
             - **questionType** (string): The type of question (e.g., "multiple_choice", "fill_in_blank", "matching").
             - **difficulty** (int): The difficulty level of the question.
             - **lessonId** (int): The identifier of the associated lesson.
             - **imgUrl** (string, nullable): The URL of an image related to the question.
             - **questionContent** (string): The text content of the question.
             - **pdfSolution** (string, nullable): A PDF solution reference, if available.
             - **choiceAnswers** (array): List of multiple-choice answers (if applicable):
               - **answerId** (int): The unique identifier of the answer choice.
               - **content** (string, nullable): The text of the answer choice (if applicable).
               - **isCorrect** (bool): Whether this choice is the correct answer.
               - **imgUrl** (string, nullable): An optional image URL for the answer choice.
             - **fillAnswers** (array): List of correct answers for fill-in-the-blank questions (if applicable):
               - **answerId** (int): The unique identifier of the correct answer.
               - **correctAnswer** (string): The correct text answer that should be filled in.
               - **position** (short): The position of the blank in the question (for multi-blank questions).
             - **matchingAnswers** (array): List of matching question pairs (if applicable):
               - **answerId** (int): The unique identifier of the matching answer.
               - **correctAnswer** (string): The correct match for the question.
               - **imgUrl** (string, nullable): An image URL representing the matching item.
            
             **Example Request:**
             ```http
             GET /api/question/grade/1/lessonorder/1
             ```
             </remarks>
             <returns>Returns a list of questions matching the specified grade and lesson order.</returns>
        </member>
        <member name="M:AIMathProject.API.Controllers.UserController.GetInfoUser(System.Int32,System.Int32)">
            <summary>
            Retrieves a paginated list of user information, accessible only to users with Admin privileges.
            </summary>
            <param name="pageindex">The index of the page to retrieve (starting from 0).</param>
            <param name="pagesize">The number of users to include per page.</param>
            <returns>
            Returns an <see cref="T:Microsoft.AspNetCore.Mvc.OkObjectResult"/> containing a <see cref="T:AIMathProject.Application.Dto.Pagination.Pagination`1"/> object with the paginated list of users.
            </returns>
            <remarks>
            - This endpoint requires the caller to be authenticated and have the "Admin" role.
            </remarks>
        </member>
        <member name="M:AIMathProject.API.Controllers.UserController.GetInfoUserLogin">
            <summary>
            This api used to get information of currently logged in user
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
